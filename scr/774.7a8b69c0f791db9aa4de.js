"use strict";(self.webpackChunkvintage_machine=self.webpackChunkvintage_machine||[]).push([[774],{2197:(t,e,r)=>{function n(t){return!!t&&!Array.isArray(t)&&"object"==typeof t}function o(t){return"string"==typeof t}function i(t){return"number"==typeof t}function s(t){return"function"==typeof t}function a(t){return"boolean"==typeof t}function c(t,e,r=null){try{return u(t,e),!0}catch(e){return r&&(console.error("[Invalid type]",r),console.error(t),console.debug(e)),!1}}function u(t,e,r="data"){if("function"==typeof e)return u(t,e(),r);if("unknown"===e)return;if("null"===e){if(null!==t)throw console.log("ðŸš€ [index] data = ",t,typeof t),Error(`Expected ${r} to be a null and not a ${d(t)}!`);return}if("string"==typeof e){if(typeof t!==e)throw Error(`Expected ${r} to be a ${e} and not a ${d(t)}!`);return}if(Array.isArray(e)){const[o]=e;switch(o){case"array":return void function(t,e,r){if(!Array.isArray(t))throw Error(`Expected ${e} to be an array and not a ${d(t)}!`);const[,n,o]=r;if(o){const r=t.length;if(i(o)){if(r!==o)throw Error(`Expected ${e}'s length to be ${o} and not ${r}!`)}else{const{min:t,max:n}=o;if(i(t)&&r<t)throw Error(`Expected ${e}'s MIN length to be ${t} and not ${r}!`);if(i(n)&&r>n)throw Error(`Expected ${e}'s MAX length to be ${n} and not ${r}!`)}}for(let r=0;r<t.length;r+=1)u(t[r],n,`${e}[${r}]`)}(t,r,e);case"map":return void function(t,e,r){if(!n(t))throw Error(`Expected ${e} to be an object and not a ${d(t)}!`);const[,o]=r;for(const r of Object.keys(t))"string"==typeof r&&u(t[r],o,`${e}[${r}]`)}(t,r,e);case"?":return void function(t,e,r){if(void 0===t)return;const[,n]=r;u(t,n,e)}(t,r,e);case"|":return void function(t,e,r){const[,...n]=r;if(0===n.length)throw Error(`No type has been defined for this alternative: ${JSON.stringify(r)}!`);const o=[];for(const r of n)try{return void u(t,r,e)}catch(t){t instanceof Error&&o.push(t)}throw new Error(`All alternatives failed!${o.map((t=>`\n${t.message}`))}`)}(t,r,e);case"tuple":return void f(t,r,e);case"tuple...":return void function(t,e,[,...r]){const n=r.length-1;f(t,e,["tuple",...r.slice(0,n)]);const o=r[n];for(let r=n;r<t.length;r++)u(t[r],o,`${e}[${r}]`)}(t,r,e);case"partial":return void function(t,e,[,r]){!function(t,e="data"){if(!n(t))throw Error(`${e} was expected to be an object but we got ${typeof t}!`)}(t,e);for(const n of Object.keys(r)){if("string"!=typeof n)continue;const o=t[n];void 0!==o&&u(o,r[n],`${e}.${n}`)}}(t,r,e);case"literal":return void function(t,e,r){const[,...n]=r;for(const e of n)if(t===e)return;throw Error(`Expected ${e} to be a literal (${n.map((t=>`"${t}"`)).join(" | ")}) and not a ${d(t)}!`)}(t,r,e);case"custom":return void function(t,e,[,r]){if(!r(t))throw Error(`Expected ${r.name}(${e}) to return true!`)}(t,r,e);default:throw Error(`Don't know how to create a type guard for this kind of type: ${JSON.stringify(e)}`)}}if("object"!=typeof t)throw Error(`Expected ${r} to be an object and not a ${d(t)}!`);const o=t;for(const t of Object.keys(e))"string"==typeof t&&u(o[t],e[t],`${r}.${t}`)}function f(t,e,[,...r]){if(function(t,e="data"){if(!Array.isArray(t))throw Error(`${e} was expected to be an Array but we got ${typeof t}!`)}(t),r.length>t.length)throw Error(`Expected ${e}'s length to be at least ${r.length} and not ${t.length}!`);for(let n=0;n<r.length;n++){const o=r[n];u(t[n],o,`${e}[${n}]`)}}function l(t,e){return function(t,e,r){return c(t,e)?t:c(r,e)?r:r(t)}(t,"number",e)}function d(t){var e;return null===t?"null":"function"==typeof t?`function ${null!==(e=t.name)&&void 0!==e?e:""}()`:typeof t}r.d(e,{Et:()=>i,GB:()=>l,Kg:()=>o,Lm:()=>a,Tn:()=>s,Xj:()=>c,j:()=>u})},4336:(t,e,r)=>{r.r(e),r.d(e,{default:()=>c});var n=r(4848),o=r(9419),i=r(6872),s=r(279),a=r(6540);function c(){const t=atob((0,o.fA)("code"));return a.useEffect((()=>{t&&s.E.run({code:t})}),[t]),console.log("ðŸš€ [page] code =",t),(0,n.jsx)(i.M,{})}},8347:(t,e,r)=>{r.d(e,{A:()=>o});var n=r(6540);class o{constructor(t,e={}){var r;this.options=e,this.listeners=new Set,this.currentValue=e.transform?e.transform(t):t,this.id=`AtomicState\n${null===(r=e.storage)||void 0===r?void 0:r.id}`,e.storage&&this.loadFromStorage()}get value(){return this.currentValue}set value(t){const{transform:e,storage:r}=this.options;if(e&&(t=e(t)),t!==this.currentValue){this.currentValue=t,r&&window.localStorage.setItem(this.id,JSON.stringify(t));for(const e of this.listeners)e(t)}}useListener(t){n.useEffect((()=>(this.listeners.add(t),()=>{this.listeners.delete(t)})),[])}useValue(){const[t,e]=n.useState(this.currentValue);return n.useEffect((()=>(this.listeners.add(e),()=>{this.listeners.delete(e)})),[]),t}useState(){const[t,e]=n.useState(this.currentValue);return n.useEffect((()=>(this.listeners.add(e),()=>{this.listeners.delete(e)})),[]),[t,t=>{this.value=t}]}loadFromStorage(){const{storage:t}=this.options;if(t)try{const e=window.localStorage.getItem(this.id);if(!e)return;const r=JSON.parse(e);if(!t.guard(r))throw Error("Invalid type!");this.currentValue=r}catch(e){console.error(`Unable to retrieve AtomicState "${t.id}":`,e)}}}}}]);