require("kernel",function(r,t){function n(){return s(a,arguments)}function e(r,t){r.width=_,r.height=E;var n=new l(r,{alpha:!0,antialias:!1,preserveDrawingBuffer:!0}),i=n.gl;this._gl=i,this._renderer=n,o.call(this);var a=i.createTexture();i.bindTexture(i.TEXTURE_2D,a),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,8,1,0,i.RGBA,i.UNSIGNED_BYTE,this._pencils),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),this._texPencils=a;var s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,256,256,0,i.RGBA,i.UNSIGNED_BYTE,t),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),this._texSymbols=s,this._prgTri=new l.Program(i,{vert:u.vert,frag:u.frag}),this._prgDisk=new l.Program(i,{vert:u.vertDisk,frag:u.fragDisk}),this._prgSprite=new l.Program(i,{vert:u.vertSprite,frag:u.fragSprite}),this._arrVertices=new f,this._bufVertexAttribs=i.createBuffer();var c=this;this.stop=n.stop.bind(n),this.start=n.start.bind(n),n.start(function(r){i.colorMask(!0,!0,!0,!0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.viewport(0,0,_,E),"function"==typeof c._render&&c._render(r,c)}),this._render=function(r,t){},Object.defineProperty(e.prototype,"render",{get:function(){return this._render},set:function(r){this._render=r},configurable:!0,enumerable:!0})}function i(r){var t=this._gl,n=this._prgTri;n.use(),t.bindBuffer(t.ARRAY_BUFFER,this._bufVertexAttribs);var e=this._arrVertices.array;t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW);var i=e.BYTES_PER_ELEMENT,o=6*i,a=t.getAttribLocation(n.program,"attPosition");t.enableVertexAttribArray(a),t.vertexAttribPointer(a,2,t.FLOAT,!1,o,0);var s=t.getAttribLocation(n.program,"attColor");t.enableVertexAttribArray(s),t.vertexAttribPointer(s,4,t.FLOAT,!1,o,2*i),t.drawArrays(r,0,this._arrVertices.length/6),this.clearPoints()}function o(){this._pencils=new Uint8Array([0,0,0,0,255,255,255,255,255,0,0,255,0,255,0,255,0,0,255,255,0,255,255,255,255,0,255,255,255,255,0,255])}var a={en:{},fr:{}},s=require("$").intl,u={vert:"attribute vec2 attPosition;\r\nattribute vec4 attColor;\r\n\r\nconst float W = 2.0 / 640.0;\r\nconst float H = 2.0 / 480.0;\r\n\r\nvarying vec4 varColor;\r\n\r\nvoid main() {\r\n  varColor = attColor;\r\n  gl_Position = vec4( attPosition.x * W - 1.0, attPosition.y * H - 1.0, 0.0, 1.0 );\r\n}\r\n",frag:"precision mediump float;\r\n\r\nvarying vec4 varColor;\r\n\r\nvoid main() {\r\n  gl_FragColor = varColor;\r\n}\r\n",vertSprite:"// attPosition.x is +1 or -1\r\n// attPosition.y is +1 or -1\r\nattribute vec2 attPosition;\r\n\r\n// In Tlk-space: 640x480.\r\nuniform float uniDstW;\r\nuniform float uniDstH;\r\nuniform float uniCenterX;\r\nuniform float uniCenterY;\r\n\r\n\r\nconst float W = 2.0 / 640.0;\r\nconst float H = 2.0 / 480.0;\r\n\r\n\r\nvarying vec2 varUV;\r\n\r\n\r\nvoid main() {\r\n  float cx = uniCenterX * W - 1.0;\r\n  float cy = uniCenterY * H - 1.0;\r\n  float x = attPosition.x * uniDstW * W;\r\n  float y = attPosition.y * uniDstH * H;\r\n\r\n  gl_Position = vec4( cx + x, cy + y, 0.0, 1.0 );\r\n  varUV = vec2( attPosition.x + .5, attPosition.y + .5 );\r\n}\r\n",fragSprite:"precision mediump float;\r\n\r\n// The symbols' page.\r\nuniform sampler2D texSymbols;\r\n// The pencils used.\r\nuniform sampler2D texPencils;\r\n\r\n// Coords of the current pixel. (0,0) is le left bottom one and (1,1) is the upper right one.\r\nvarying vec2 varUV;\r\n\r\n// In pixels of the symbols' page.\r\nuniform float uniSrcX;\r\nuniform float uniSrcY;\r\nuniform float uniSrcW;\r\nuniform float uniSrcH;\r\n\r\nconst float UNIT = 1.0 / 256.0;\r\n\r\nvoid main() {\r\n  float x = ( varUV.x * uniSrcW + uniSrcX ) / 256.0;\r\n  float y = ( (1.0 - varUV.y) * uniSrcH + uniSrcY ) / 256.0;\r\n  float color = texture2D( texSymbols, vec2( x, y ) ).r;\r\n  // color is between 0 and 7 * UNIT.\r\n  if (color < UNIT) {\r\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\r\n  } else {\r\n  // The palette index is coded on the RED composant of texPencils.\r\n    gl_FragColor = texture2D( texPencils, vec2(color * 32.0, .5) );\r\n  }\r\n}\r\n\r\n",vertDisk:"uniform float uniX;\r\nuniform float uniY;\r\nuniform float uniW;\r\nuniform float uniH;\r\n\r\nattribute vec2 attPosition;\r\n\r\nconst float W = 2.0 / 640.0;\r\nconst float H = 2.0 / 480.0;\r\n\r\nvarying vec2 varPosition;\r\n\r\nvoid main() {\r\n  varPosition = attPosition;\r\n  float x = (uniX + attPosition.x * uniW) * W - 1.0;\r\n  float y = (uniY + attPosition.y * uniH) * H - 1.0;\r\n  gl_Position = vec4( x, y, 0.0, 1.0 );\r\n}\r\n",fragDisk:"precision mediump float;\r\n\r\nuniform float uniR;\r\nuniform float uniG;\r\nuniform float uniB;\r\nuniform float uniA;\r\nvarying vec2 varPosition;\r\n\r\nvoid main() {\r\n  float radius = varPosition.x * varPosition.x + varPosition.y * varPosition.y;\r\n  if (radius > 1.0) gl_FragColor = vec4(0.0,0.0,0.0,0.0);\r\n  else gl_FragColor = vec4(uniR, uniG, uniB, uniA);\r\n}\r\n"},l=require("tfw.webgl"),f=(require("keyboard"),require("vertex-buffer")),_=640,E=480;t.exports=e,e.prototype.clearPoints=function(){this._arrVertices.reset()},e.prototype.point=function(r,t,n){n=this.expandColor(n),this._arrVertices.push(r,t,n[0],n[1],n[2],n[3])},e.prototype.expandColor=function(r){var t=17*(15&r);r>>=4;var n=17*(15&r);r>>=4;var e=17*(15&r);r>>=4;var i=255-17*r;return[e/256,n/256,t/256,i/256]},e.prototype.triangles=function(){i.call(this,this._gl.TRIANGLES)},e.prototype.triStrip=function(){i.call(this,this._gl.TRIANGLE_STRIP)},e.prototype.triFan=function(){i.call(this,this._gl.TRIANGLE_FAN)};var c=new Float32Array([-.5,-.5,.5,-.5,-.5,.5,.5,.5]);e.prototype.sprite=function(r,t,n,e,i,o,a,s,u,l){"undefined"==typeof s&&(s=1),"undefined"==typeof u&&(u=1),"undefined"==typeof l&&(l=0),"undefined"==typeof o&&(o=16),"undefined"==typeof a&&(a=16);var f=this._gl,_=this._prgSprite;_.use(),f.enable(f.BLEND),f.blendFunc(f.SRC_ALPHA,f.ONE_MINUS_SRC_ALPHA),_.$uniCenterX=e,_.$uniCenterY=i,_.$uniDstW=o,_.$uniDstH=a,_.$uniSrcX=t,_.$uniSrcY=n,_.$uniSrcW=o,_.$uniSrcH=a,_.$texSymbols=0,f.activeTexture(f.TEXTURE0),f.bindTexture(f.TEXTURE_2D,this._texSymbols),_.$texPencils=1,f.activeTexture(f.TEXTURE1),f.bindTexture(f.TEXTURE_2D,this._texPencils),f.texImage2D(f.TEXTURE_2D,0,f.RGBA,8,1,0,f.RGBA,f.UNSIGNED_BYTE,this._pencils),f.bindBuffer(f.ARRAY_BUFFER,this._bufVertexAttribs);var E=c;f.bufferData(f.ARRAY_BUFFER,E,f.STATIC_DRAW);var T=E.BYTES_PER_ELEMENT,v=2*T,A=f.getAttribLocation(_.program,"attPosition");f.enableVertexAttribArray(A),f.vertexAttribPointer(A,2,f.FLOAT,!1,v,0),f.drawArrays(f.TRIANGLE_STRIP,0,4)};var T=new Float32Array([-1,-1,1,-1,-1,1,1,1]);e.prototype.disk=function(r,t,n,e,i,o,a,s,u){var l=this._gl,f=this._prgDisk;f.use(),l.enable(l.BLEND),l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA),f.$uniX=r,f.$uniY=t,f.$uniW=n,f.$uniH=e,f.$uniR=o,f.$uniG=a,f.$uniB=s,f.$uniA=u,l.bindBuffer(l.ARRAY_BUFFER,this._bufVertexAttribs);var _=T;l.bufferData(l.ARRAY_BUFFER,_,l.STATIC_DRAW);var E=_.BYTES_PER_ELEMENT,c=2*E,v=l.getAttribLocation(f.program,"attPosition");l.enableVertexAttribArray(v),l.vertexAttribPointer(v,2,l.FLOAT,!1,c,0),l.drawArrays(l.TRIANGLE_STRIP,0,4)},e.prototype.pen=function(r,t){var n=this._pencils;t=this.expandColor(t),t.forEach(function(t,e){n[4*r+e]=255*t})},e.prototype.blend=function(r){var t=this._gl;r?t.enable(t.BLEND):t.disable(t.BLEND)},t.exports._=n});
//# sourceMappingURL=kernel.js.map