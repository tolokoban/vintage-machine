"use strict";
self["webpackHotUpdatevintage_machine"]("app",{

/***/ 4658:
/*!******************************!*\
  !*** ./src/kernel/kernel.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Kernel: () => (/* binding */ Kernel)
/* harmony export */ });
/* harmony import */ var _tolokoban_tgd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tolokoban/tgd */ 953);

class Kernel extends _tolokoban_tgd__WEBPACK_IMPORTED_MODULE_0__.TgdPainter {
    constructor(canvas, symbols) {
        super();
        this.variables = new Map();
        this.layersSwaps = [[], []];
        this.layersIndexes = [];
        this._currentLayer = 0;
        this.paintLayer = (time, delay) => { };
        canvas.width = Kernel.WIDTH;
        canvas.height = Kernel.HEIGHT;
        const context = new _tolokoban_tgd__WEBPACK_IMPORTED_MODULE_0__.TgdContext(canvas, {
            alpha: true,
            antialias: false,
            preserveDrawingBuffer: true,
        });
        this.context = context;
        this.framebuffer = new _tolokoban_tgd__WEBPACK_IMPORTED_MODULE_0__.TgdPainterFramebuffer(context, {
            children: [new _tolokoban_tgd__WEBPACK_IMPORTED_MODULE_0__.TgdPainterLogic(this.paintLayer)],
        });
        for (let index = 0; index < Kernel.LAYERS_COUNT; index++) {
            for (const layers of this.layersSwaps) {
                layers.push(new _tolokoban_tgd__WEBPACK_IMPORTED_MODULE_0__.TgdTexture2D(context).setParams({
                    wrapS: "REPEAT",
                    wrapT: "REPEAT",
                    magFilter: "NEAREST",
                    minFilter: "NEAREST",
                }));
            }
            this.layersIndexes.push(0);
        }
        context.add(this);
        context.paint();
    }
    get currentLayer() {
        return this._currentLayer;
    }
    set currentLayer(value) {
        value =
            Kernel.LAYERS_COUNT === 1
                ? 0
                : (0,_tolokoban_tgd__WEBPACK_IMPORTED_MODULE_0__.tgdCalcModulo)(Math.round(value), 0, Kernel.LAYERS_COUNT - 1);
        this._currentLayer = value;
    }
    delete() {
        this.framebuffer.delete();
        for (const layers of this.layersSwaps) {
            for (const layer of layers) {
                layer.delete();
            }
        }
    }
    paint(time, delay) {
        const { context } = this;
        const { gl } = context;
        gl.clearColor(1, 0.667, 0, 1);
        gl.clear(gl.COLOR_BUFFER_BIT);
    }
    getVar(name) {
        var _a;
        return (_a = this.variables.get(name)) !== null && _a !== void 0 ? _a : 0;
    }
    setVar(name, value) {
        this.variables.set(name, value);
    }
    debugVariables() {
        for (const key of this.variables.keys()) {
            console.log(key, "=", this.getVar(key));
        }
    }
}
Kernel.LAYERS_COUNT = 1;
Kernel.WIDTH = 640;
Kernel.HEIGHT = 480;


/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("1df63cd8181b4ee3c9dc")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLjVkZDAxNDE1MDlmMTRlYjA2YThkLmhvdC11cGRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFRd0I7QUFFakIsTUFBTSxNQUFPLFNBQVEsc0RBQVU7SUFZcEMsWUFBWSxNQUF5QixFQUFFLE9BQW9CO1FBQ3pELEtBQUssRUFBRSxDQUFDO1FBUE8sY0FBUyxHQUFHLElBQUksR0FBRyxFQUFzQixDQUFDO1FBQzFDLGdCQUFXLEdBQXFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELGtCQUFhLEdBQWEsRUFBRSxDQUFDO1FBRXRDLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO1FBMkRULGVBQVUsR0FBRyxDQUFDLElBQVksRUFBRSxLQUFhLEVBQVEsRUFBRSxHQUFFLENBQUMsQ0FBQztRQXZEdEUsTUFBTSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzVCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM5QixNQUFNLE9BQU8sR0FBRyxJQUFJLHNEQUFVLENBQUMsTUFBTSxFQUFFO1lBQ3JDLEtBQUssRUFBRSxJQUFJO1lBQ1gsU0FBUyxFQUFFLEtBQUs7WUFDaEIscUJBQXFCLEVBQUUsSUFBSTtTQUM1QixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksaUVBQXFCLENBQUMsT0FBTyxFQUFFO1lBQ3BELFFBQVEsRUFBRSxDQUFDLElBQUksMkRBQWUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDakQsQ0FBQyxDQUFDO1FBQ0gsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLE1BQU0sQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQztZQUN6RCxLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztnQkFDdEMsTUFBTSxDQUFDLElBQUksQ0FDVCxJQUFJLHdEQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDO29CQUNsQyxLQUFLLEVBQUUsUUFBUTtvQkFDZixLQUFLLEVBQUUsUUFBUTtvQkFDZixTQUFTLEVBQUUsU0FBUztvQkFDcEIsU0FBUyxFQUFFLFNBQVM7aUJBQ3JCLENBQUMsQ0FDSCxDQUFDO1lBQ0osQ0FBQztZQUNELElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdCLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xCLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBRUQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFJLFlBQVksQ0FBQyxLQUFhO1FBQzVCLEtBQUs7WUFDSCxNQUFNLENBQUMsWUFBWSxLQUFLLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxDQUFDO2dCQUNILENBQUMsQ0FBQyw2REFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDbkUsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7SUFDN0IsQ0FBQztJQUVELE1BQU07UUFDSixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzFCLEtBQUssTUFBTSxNQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3RDLEtBQUssTUFBTSxLQUFLLElBQUksTUFBTSxFQUFFLENBQUM7Z0JBQzNCLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNqQixDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7SUFFRCxLQUFLLENBQUMsSUFBWSxFQUFFLEtBQWE7UUFDL0IsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQztRQUN6QixNQUFNLEVBQUUsRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBSUQsTUFBTSxDQUFDLElBQVk7O1FBQ2pCLE9BQU8sVUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG1DQUFJLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQVksRUFBRSxLQUFpQjtRQUNwQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELGNBQWM7UUFDWixLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQztZQUN4QyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzFDLENBQUM7SUFDSCxDQUFDOztBQWxGZSxtQkFBWSxHQUFHLENBQUMsQ0FBQztBQUNqQixZQUFLLEdBQUcsR0FBRyxDQUFDO0FBQ1osYUFBTSxHQUFHLEdBQUcsQ0FBQzs7Ozs7Ozs7O1VDYi9CIiwic291cmNlcyI6WyIvaG9tZS90b2xva29iYW4vQ29kZS9naXRodWIvZ2FtZS9nYW1lcy92aW50YWdlLW1hY2hpbmUvc3JjL2tlcm5lbC9rZXJuZWwudHMiLCJ3ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzaWtWYWx1ZSB9IGZyb20gXCJAL3R5cGVzXCI7XG5pbXBvcnQge1xuICB0Z2RDYWxjTW9kdWxvLFxuICBUZ2RDb250ZXh0LFxuICBUZ2RQYWludGVyLFxuICBUZ2RQYWludGVyRnJhbWVidWZmZXIsXG4gIFRnZFBhaW50ZXJMb2dpYyxcbiAgVGdkVGV4dHVyZTJELFxufSBmcm9tIFwiQHRvbG9rb2Jhbi90Z2RcIjtcblxuZXhwb3J0IGNsYXNzIEtlcm5lbCBleHRlbmRzIFRnZFBhaW50ZXIge1xuICBzdGF0aWMgcmVhZG9ubHkgTEFZRVJTX0NPVU5UID0gMTtcbiAgc3RhdGljIHJlYWRvbmx5IFdJRFRIID0gNjQwO1xuICBzdGF0aWMgcmVhZG9ubHkgSEVJR0hUID0gNDgwO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgY29udGV4dDogVGdkQ29udGV4dDtcbiAgcHJpdmF0ZSByZWFkb25seSB2YXJpYWJsZXMgPSBuZXcgTWFwPHN0cmluZywgQmFzaWtWYWx1ZT4oKTtcbiAgcHJpdmF0ZSByZWFkb25seSBsYXllcnNTd2FwczogW1RnZFRleHR1cmUyRFtdLCBUZ2RUZXh0dXJlMkRbXV0gPSBbW10sIFtdXTtcbiAgcHJpdmF0ZSByZWFkb25seSBsYXllcnNJbmRleGVzOiBudW1iZXJbXSA9IFtdO1xuICBwcml2YXRlIHJlYWRvbmx5IGZyYW1lYnVmZmVyOiBUZ2RQYWludGVyRnJhbWVidWZmZXI7XG4gIHByaXZhdGUgX2N1cnJlbnRMYXllciA9IDA7XG5cbiAgY29uc3RydWN0b3IoY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCwgc3ltYm9sczogQXJyYXlCdWZmZXIpIHtcbiAgICBzdXBlcigpO1xuICAgIGNhbnZhcy53aWR0aCA9IEtlcm5lbC5XSURUSDtcbiAgICBjYW52YXMuaGVpZ2h0ID0gS2VybmVsLkhFSUdIVDtcbiAgICBjb25zdCBjb250ZXh0ID0gbmV3IFRnZENvbnRleHQoY2FudmFzLCB7XG4gICAgICBhbHBoYTogdHJ1ZSxcbiAgICAgIGFudGlhbGlhczogZmFsc2UsXG4gICAgICBwcmVzZXJ2ZURyYXdpbmdCdWZmZXI6IHRydWUsXG4gICAgfSk7XG4gICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgICB0aGlzLmZyYW1lYnVmZmVyID0gbmV3IFRnZFBhaW50ZXJGcmFtZWJ1ZmZlcihjb250ZXh0LCB7XG4gICAgICBjaGlsZHJlbjogW25ldyBUZ2RQYWludGVyTG9naWModGhpcy5wYWludExheWVyKV0sXG4gICAgfSk7XG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IEtlcm5lbC5MQVlFUlNfQ09VTlQ7IGluZGV4KyspIHtcbiAgICAgIGZvciAoY29uc3QgbGF5ZXJzIG9mIHRoaXMubGF5ZXJzU3dhcHMpIHtcbiAgICAgICAgbGF5ZXJzLnB1c2goXG4gICAgICAgICAgbmV3IFRnZFRleHR1cmUyRChjb250ZXh0KS5zZXRQYXJhbXMoe1xuICAgICAgICAgICAgd3JhcFM6IFwiUkVQRUFUXCIsXG4gICAgICAgICAgICB3cmFwVDogXCJSRVBFQVRcIixcbiAgICAgICAgICAgIG1hZ0ZpbHRlcjogXCJORUFSRVNUXCIsXG4gICAgICAgICAgICBtaW5GaWx0ZXI6IFwiTkVBUkVTVFwiLFxuICAgICAgICAgIH0pLFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgdGhpcy5sYXllcnNJbmRleGVzLnB1c2goMCk7XG4gICAgfVxuICAgIGNvbnRleHQuYWRkKHRoaXMpO1xuICAgIGNvbnRleHQucGFpbnQoKTtcbiAgfVxuXG4gIGdldCBjdXJyZW50TGF5ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRMYXllcjtcbiAgfVxuICBzZXQgY3VycmVudExheWVyKHZhbHVlOiBudW1iZXIpIHtcbiAgICB2YWx1ZSA9XG4gICAgICBLZXJuZWwuTEFZRVJTX0NPVU5UID09PSAxXG4gICAgICAgID8gMFxuICAgICAgICA6IHRnZENhbGNNb2R1bG8oTWF0aC5yb3VuZCh2YWx1ZSksIDAsIEtlcm5lbC5MQVlFUlNfQ09VTlQgLSAxKTtcbiAgICB0aGlzLl9jdXJyZW50TGF5ZXIgPSB2YWx1ZTtcbiAgfVxuXG4gIGRlbGV0ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmZyYW1lYnVmZmVyLmRlbGV0ZSgpO1xuICAgIGZvciAoY29uc3QgbGF5ZXJzIG9mIHRoaXMubGF5ZXJzU3dhcHMpIHtcbiAgICAgIGZvciAoY29uc3QgbGF5ZXIgb2YgbGF5ZXJzKSB7XG4gICAgICAgIGxheWVyLmRlbGV0ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHBhaW50KHRpbWU6IG51bWJlciwgZGVsYXk6IG51bWJlcik6IHZvaWQge1xuICAgIGNvbnN0IHsgY29udGV4dCB9ID0gdGhpcztcbiAgICBjb25zdCB7IGdsIH0gPSBjb250ZXh0O1xuICAgIGdsLmNsZWFyQ29sb3IoMSwgMC42NjcsIDAsIDEpO1xuICAgIGdsLmNsZWFyKGdsLkNPTE9SX0JVRkZFUl9CSVQpO1xuICB9XG5cbiAgcHJpdmF0ZSByZWFkb25seSBwYWludExheWVyID0gKHRpbWU6IG51bWJlciwgZGVsYXk6IG51bWJlcik6IHZvaWQgPT4ge307XG5cbiAgZ2V0VmFyKG5hbWU6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLnZhcmlhYmxlcy5nZXQobmFtZSkgPz8gMDtcbiAgfVxuXG4gIHNldFZhcihuYW1lOiBzdHJpbmcsIHZhbHVlOiBCYXNpa1ZhbHVlKSB7XG4gICAgdGhpcy52YXJpYWJsZXMuc2V0KG5hbWUsIHZhbHVlKTtcbiAgfVxuXG4gIGRlYnVnVmFyaWFibGVzKCkge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMudmFyaWFibGVzLmtleXMoKSkge1xuICAgICAgY29uc29sZS5sb2coa2V5LCBcIj1cIiwgdGhpcy5nZXRWYXIoa2V5KSk7XG4gICAgfVxuICB9XG59XG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCIxZGY2M2NkODE4MWI0ZWUzYzlkY1wiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==